@model banimo.AdminPanelBoom.ViewModel.productCore

@using (Html.BeginForm("setMainProductFromSail", "Partner", FormMethod.Post, new { enctype = "multipart/form-data", id = "addproduct00" }))
{
    <input id="selectedColor" name="selectedColor" hidden />
    <input id="SFilter" name="selectedFilter" hidden />
    string address = Model.address != null ? Model.address : "";
    string title = Model.title != null ? Model.title : "";
    string code = Model.code != null ? Model.code : "0";
    string barcode = Model.barcode != null ? Model.barcode : "";
    string multiple = Model.ID != 0 ? "" : "multiple";
    string description = Model.description != null ? Model.description : "";
    string initCount = Model.initCount != null ? Model.initCount : "0";
    <input name="ID" hidden value="@Model.ID" />


    <div class="mb-4 row align-items-center">
        <label class="form-label-title col-sm-2 mb-0">
            @Resources.res.productTitle 
        </label>
        <div class="col-sm-10">
            <input value="@title" id="productname" name="title" class="form-control" type="text" placeholder="@Resources.res.productTitle ">
        </div>
    </div>

    <div class="mb-4 row align-items-center" style="display:none">
        <label class="form-label-title col-sm-2 mb-0">@Resources.res.category</label>
        <div class="col-sm-10">
            @Html.DropDownListFor(x => x.selectedCat, new SelectList(Model.catCore, "ID", "title"), new { id = "addMPCat", name = "addMPCat", style = "", @class = "form-control" })

        </div>
    </div>
    <div class="mb-4 row align-items-center">
        <label class="form-label-title col-sm-2 mb-0">@Resources.res.color</label>
        <div class="col-sm-10">
            <span id="addColorButton" style="margin-bottom: 10px"><span style="width:200px" class="btn btn-primary">@Resources.res.addNewColor </span></span>
            @if (Model.ID != 0)
            {
                <div class=" ">
                    @Html.DropDownListFor(x => x.selectedColor, new SelectList(Model.colors, "title", "title"), Resources.res.choosColor, new { id = "ColorC", name = "ColorC", style = "", @class = "form-control" })
                </div>
            }
            else
            {
                <div class=" ">
                    @if (Model.colors != null)
                    {
                        @Html.DropDownList("ColorC", new SelectList(Model.colors, "title", "title"), Resources.res.choosColor, new { id = "ColorC", name = "ColorC", style = "", @class = "form-control", @multiple })

                    }
                </div>
            }
        </div>
    </div>
    <div class="mb-4 row align-items-center">
        <label class="form-label-title col-sm-2 mb-0">@Resources.res.variation    </label>
        <div class="col-sm-10">
            <div class="row"><span id="addShakhesButton" style="margin-bottom: 10px"><span style="width:200px" class="btn btn-primary">@Resources.res.addNewVariation </span></span></div>
            @if (@Model.filterCore != null)
            {
                if (Model.ID != 0)
                {
                    <div class=" ">

                        @Html.DropDownListFor(x => x.selectedFilter, new SelectList(Model.filterCore, "title", "title"), Resources.res.chooseVari, new { id = "filterC", name = "filterC", style = "", @class = "form-control" })
                    </div>
                }
                else
                {
                    if (Model.filterCore != null)
                    {
                        <div class=" ">
                            @Html.DropDownList("filterC", new SelectList(Model.filterCore, "title", "title"), Resources.res.chooseVari, new { id = "filterC", name = "filterC", style = "", @class = "form-control", @multiple })
                        </div>
                    }


                }
            }
            else
            {
                <select class="form-control">
                </select>
            }
        </div>
    </div>


    <div style="display:none" class="row fieldholder col-lg-3">
        <label> @Resources.res.brand</label>
        <div class=" ">
            @if (Model.brandCore != null)
            {
                @Html.DropDownListFor(x => x.selectedbrand, new SelectList(Model.brandCore, "title", "title"), Resources.res.selectitem, new { id = "brandC", name = "brandC", style = "", @class = "form-control" })

            }
        </div>


    </div>

    <div style="display:none" class="row fieldholder col-lg-3">
        <label style="text-align: right">
            @Resources.res.address :
        </label>
        <div>
            <input value="@address" type="text" id="productAddress" name="address" required="required" class="form-control col-md-7 col-xs-12">
        </div>
    </div>
    <div style="display:none" class="row fieldholder col-lg-3">
        <label style="text-align: right">
            @Resources.res.Code :
        </label>
        <div>
            <input value="@code" type="text" id="productCode" name="code" required="required" class="form-control col-md-7 col-xs-12">
        </div>
    </div>
    <div style="display:none" class="row fieldholder col-lg-3">
        <label style="text-align: right">
            @Resources.res.count :
        </label>
        <div>
            <input value="@initCount" type="text" id="productInitCount" name="initCount" required="required" class="form-control col-md-7 col-xs-12">
        </div>

    </div>
    <div class="row " style="padding:0 25px; display:none">
        <div class="row fieldholder col-lg-3">
            <label for="first-name" style="text-align:right">
                @Resources.res.Barcode :
            </label>
            <div>
                <input value="@barcode" type="text" id="productBarcode" name="barcode" required="required" class="form-control ">
            </div>
        </div>
        <div class="row fieldholder col-lg-3">
            <label for="first-name" style="text-align:right">
                @Resources.res.description :
            </label>
            <div>
                <input value="@description" type="text" id="productDesc" name="description" required="required" class="form-control ">
            </div>
        </div>
    </div>

    <div id="CRprocuctpartner" class="row">
        <div class="btn btn-primary lgnsubmitt">@Resources.res.createProduct</div>
    </div>


    if (Model.ID != 0)
    {
        <script>
            $("#filterC option").each(function () {
                if ($(this).text() == "@Model.filter") {
                    $(this).attr('selected', 'selected');
                }
            });
            $("#ColorC option").each(function () {
                if ($(this).text() == "@Model.color") {
                    $(this).attr('selected', 'selected');
                }
            });
            $("#brandC option").each(function () {
                if ($(this).text() == "@Model.brand") {
                    $(this).attr('selected', 'selected');
                }
            });
            $("#addMPCat option").each(function () {
                if ($(this).val() == "@Model.cat") {
                    $(this).attr('selected', 'selected');
                }
            });

        </script>
    }
    <script>

        $("#CRprocuctpartner").click(function () {




            var name = productname.value;
            var addMPCat = $("#addMPCat").val();
            var brandC = $("#brandC").val();





            if (name == "") {
                toastr.options = {
                    "debug": false,
                    "positionClass": "toast-top-center",
                    "onclick": null,
                    "fadeIn": 300,
                    "fadeOut": 1000,
                    "timeOut": 5000,
                    "extendedTimeOut": 1000
                }
                toastr.error('Insert Name')
            }
            //if (brandC == "") {
            //    toastr.options = {
            //        "debug": false,
            //        "positionClass": "toast-top-center",
            //        "onclick": null,
            //        "fadeIn": 300,
            //        "fadeOut": 1000,
            //        "timeOut": 5000,
            //        "extendedTimeOut": 1000
            //    }
            //    toastr.error(' لطفا برند را انتخاب کنید')

            //}
            if (addMPCat == "") {
                toastr.options = {
                    "debug": false,
                    "positionClass": "toast-top-center",
                    "onclick": null,
                    "fadeIn": 300,
                    "fadeOut": 1000,
                    "timeOut": 5000,
                    "extendedTimeOut": 1000
                }
                toastr.error(' Choose Category ')

            }


            if (name != ""  && addMPCat != "") {


                $("#SFilter").val($("#filterC").val());
                $("#selectedColor").val($("#ColorC").val());


                //alert($("#filterC").val());
                $("#addproduct00").submit();

            }
            else {

                toastr.options = {
                    "debug": false,
                    "positionClass": "toast-top-center",
                    "onclick": null,
                    "fadeIn": 300,
                    "fadeOut": 1000,
                    "timeOut": 5000,
                    "extendedTimeOut": 1000
                }
                toastr.error('@Resources.res.insetAllData')
            }
        })


    </script>
    <script>




        $(".REM").click(function () {

            var id = $(this).attr('id');

        })
    </script>
    <script>
        if (screen.width > 900) {
            $(".appview").css("display", "none")
        }
        else {
            $(".webview").css("display", "none")
        }


        $("#addShakhesButton").click(function () {
            $("#addShakhes").modal('toggle');
        })
        $("#addColorButton").click(function () {
            $("#addColorModal").modal('toggle');
        });
    </script>
}

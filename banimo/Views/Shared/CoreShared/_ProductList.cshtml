@model AdminPanelBoom.ViewModel.productMainVM
@*@model PagedList.IPagedList<AdminPanelBoom.ViewModel.orderdetail>*@
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "لیست محصولات";
}


@*@using (Html.BeginForm("Index", "Student", FormMethod.Get))
    {
        <p>
            Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }*@
@{


    <!-- Modal -->
    <p style="display:none" id="modalValue"></p>
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-body">
                    <p id="modalmessage">آیا از حذف محصول اطمینان دارید</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="margin:7px;">خیر</button>
                    <button id="confirmdelete" type="button" class="btn btn-default" data-dismiss="modal" style="margin: 7px;">بله</button>
                    <script>
                        $("#confirmdelete").click(function () {
                            $("#myModal").modal('hide');
                            var id = $("#modalValue").text();

                            $.ajax({
                                url: '/Core/Delete',
                                dataType: 'html',
                                data: {
                                    ID: id,
                                    mainType: "product"
                                },
                                success: function (data) {
                                    if (data == "error") {
                                        toastr.options = {
                                            "debug": false,
                                            "positionClass": "toast-top-center",
                                            "onclick": null,
                                            "fadeIn": 300,
                                            "fadeOut": 1000,
                                            "timeOut": 5000,
                                            "extendedTimeOut": 1000
                                        }
                                        toastr.error('محصول مورد نظر دارای گردش میباشد')
                                    }
                                    else {
                                        toastr.options = {
                                            "debug": false,
                                            "positionClass": "toast-top-center",
                                            "onclick": null,
                                            "fadeIn": 300,
                                            "fadeOut": 1000,
                                            "timeOut": 5000,
                                            "extendedTimeOut": 1000
                                        }
                                        toastr.success('محصول مورد نظر حذف شد')
                                        $("#" + id).hide();
                                    }


                                },
                                error: function () {
                                    alert("nashod")
                                }
                            });
                        })

                    </script>
                </div>
            </div>
        </div>
    </div>
    <div id="residModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg" >
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-body">
                    <div style="display:flex">
                        <div style="margin-left:20px">
                            <p>نوع تراکنش</p>
                            <select id="partnertype" class="form-control">

                                <option value="0">
                                    رسید
                                </option>
                                <option value="1">
                                    حواله
                                </option>
                            </select>
                        </div>
                        <div style="margin-left:20px">
                            <p>تعداد مد نطر</p>
                            <input id="count" class="form-control" />
                        </div>
                        <div style="margin-left:20px">
                            <p>تحویل دهنده/گیرنده</p>
                            @Html.DropDownList("partnerItem", new SelectList(Model.partnerList, "ID", "title"), "انتخاب تامین کننیده", new { @class = "form-control", id = "partnerItem" })

                        </div>
                        <div>
                            <p>توضیحات</p>
                            <input id="reciever" class="form-control" />
                        </div>
                        <input hidden id="residID" />
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="margin:7px;">لغو</button>
                    <button id="confirmResid" type="button" class="btn btn-default" style="margin: 7px;">تایید</button>

                    <script>
                        $("#confirmResid").click(function () {
                            //$("#residModal").modal('hide');
                            var reciever = $("#reciever").val();
                            var count = $("#count").val();
                            var ID = $("#residID").val();
                            var PID = $("#partnerItem").val();
                            var type = $("#partnertype").val();
                            var factorType = "10";

                            $.ajax({
                                url: '/Core/resid',
                                dataType: 'html',
                                data: {
                                    count: count,
                                    deliver: reciever,
                                    ID: ID,
                                    PID: PID,
                                    type: type,
                                    factorType: factorType,

                                },
                                success: function (data) {
                                    if (data == "error") {
                                        toastr.options = {
                                            "debug": false,
                                            "positionClass": "toast-top-center",
                                            "onclick": null,
                                            "fadeIn": 300,
                                            "fadeOut": 1000,
                                            "timeOut": 5000,
                                            "extendedTimeOut": 1000
                                        }
                                        toastr.error('محصول مورد نظر دارای گردش میباشد')
                                    }
                                    else {
                                        toastr.options = {
                                            "debug": false,
                                            "positionClass": "toast-top-center",
                                            "onclick": null,
                                            "fadeIn": 300,
                                            "fadeOut": 1000,
                                            "timeOut": 5000,
                                            "extendedTimeOut": 1000
                                        }
                                        toastr.success('محصول مورد نظر حذف شد')
                                        window.location.reload();
                                    }


                                },
                                error: function () {
                                    alert("nashod")
                                }
                            });
                        })

                    </script>
                </div>
            </div>
        </div>
    </div>
  
    <div id="editModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content" id="editHolder">

            </div>
        </div>
    </div>

    if (Model.products == null)
    {
        <p style="text-align:center">موردی وجود ندارد</p>
    }
    else
    {




        <div class="row">
            <div style="overflow-x:auto;padding:10px">
                <div class="panel panel-default">
                    <div class="panel-heading" style="    background-image: -webkit-linear-gradient(top,#2a85ae 0,#246388 100%) !important;
    background-image: -o-linear-gradient(top,#2a85ae 0,#246388 100%) !important;
    background-image: -webkit-gradient(linear,left top,left bottom,from(#2a85ae),to(#246388)) !important;
    background-image: linear-gradient(to bottom,#2a85ae 0,#246388 100%) !important;color: #fff">
                        <h3 class="panel-title"><i class="fa fa-shopping-basket fa-fw"></i> لیست محصولات </h3>
                    </div>
                    <div class="panel-body">
                        <div id="morris-area-chart">
                            <div style="overflow:auto">
                                <table class="table table-bordered table-hover table-striped">
                                    <thead>
                                        <tr>
                                            <th>
                                                ID
                                                @*@Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })*@
                                            </th>
                                            <th>
                                                عنوان
                                            </th>
                                            <th>
                                                رنگ
                                            </th>
                                            <th>
                                                شاخص
                                            </th>
                                            <th>
                                                تعداد
                                            </th>

                                            <th>
                                                تعداد اولیه
                                            </th>

                                            <th>
                                            </th>
                                            <th>
                                            </th>
                                            <th>
                                            </th>
                                            <th>
                                            </th>
                                            <th>
                                            </th>
                                        </tr>
                                    </thead>



                                    <tbody>
                                        @foreach (var item in Model.products)
                                        {
                                            string color = item.color;
                                            <tr id="@item.ID">
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.ID)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.title)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.color)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.selectedFilter)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.count)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.initCount)
                                                </td>

                                                <td>
                                                    <a dataToEdit=@item.ID class="btn btn-primary editItem" style="  margin:5px ; cursor: pointer;  padding: 5px; color: #fff; border-radius: 5px;">ویرایش</a>


                                                </td>
                                                <td>
                                                    @{
                                                        <a dataToDel="@item.ID" class="btn btn-primary deleteButt" style="  margin:5px ; cursor: pointer;  padding: 5px; color: #fff; border-radius: 5px;">حذف</a>

                                                    }

                                                </td>
                                                <td>
                                                    @{

                                                        <a dataToResid=@item.ID class="btn btn-primary residButt" style="  margin:5px ; cursor: pointer;  padding: 5px; color: #fff; border-radius: 5px;"> انتقال تامین کننده</a>

                                                    }
                                                </td>

                                                <td>
                                                    @{

                                                        <a dataToHavale=@item.ID class="btn btn-primary havaleButt" style="  margin:5px ; cursor: pointer;  padding: 5px; color: #fff; border-radius: 5px;"> انتقال انبار</a>

                                                    }
                                                </td>
                                                <td>
                                                    <button type="button" class="btn btn-info addtoserver" data-toggle="modal" data-target="#serverModal" id="@item.ID">تخصیص</button>
                                                </td>

                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>




        <br />
        @*Page @(Model.PageCount <Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@
        <p id="selectedForServer"></p>


        <script>
            $(".addtoserver").click(function () {

                var id = $(this).attr('id');
                $("#takhsisID").val(id);
               

            })
            $(".specialOffer").click(function () {
                if ($(this).is(':checked')) {
                    var productValue = "1";
                }
                else {
                    var productValue = "0";
                }
                var Prodcutid = $(this).attr("id");

                $.ajax({
                    url: '/Admin/ChangeProductSpecialOffer',
                    dataType: 'html',
                    data: {
                        id: Prodcutid,
                        value: productValue
                    },
                    success: function (data) {


                    },
                    error: function () {

                    }
                });
            })
            $(".Offer").click(function () {
                if ($(this).is(':checked')) {
                    var productValue = "1";
                }
                else {
                    var productValue = "0";
                }
                var Prodcutid = $(this).attr("id");

                $.ajax({
                    url: '/Admin/ChangeProductOffer',
                    dataType: 'html',
                    data: {
                        id: Prodcutid,
                        value: productValue
                    },
                    success: function (data) {


                    },
                    error: function () {

                    }
                });
            })
            $(".Active").click(function () {
                if ($(this).is(':checked')) {
                    var productValue = "1";
                }
                else {
                    var productValue = "0";
                }
                var Prodcutid = $(this).attr("id");

                $.ajax({
                    url: '/Admin/ChangeProductActive',
                    dataType: 'html',
                    data: {
                        id: Prodcutid,
                        value: productValue
                    },
                    success: function (data) {


                    },
                    error: function () {

                    }
                });
            })
            $(".Available").click(function () {
                if ($(this).is(':checked')) {
                    var productValue = "1";
                }
                else {
                    var productValue = "0";
                }
                var Prodcutid = $(this).attr("id");

                $.ajax({
                    url: '/Admin/ChangeProductAvailable',
                    dataType: 'html',
                    data: {
                        id: Prodcutid,
                        value: productValue
                    },
                    success: function (data) {


                    },
                    error: function () {

                    }
                });
            })
        </script>


        <div class="row">
            @{
                var total = (Convert.ToInt32(Model.count) / 12);
                var remain = (Convert.ToInt32(Model.count) % 12);
                if (remain != 0)
                {
                    total = total + 1;
                }
                var activ = Convert.ToInt32(Model.current);
                var activminus2 = activ - 2;
                var activminus1 = activ - 1;
                var activplus1 = activ + 1;
                var activplus2 = activ + 2;



                if ((total - activ) > 3 & activ > 3)
                {
                    <ul class="pagination">
                        <li><a>«</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>1</a></li>
                        @if (activminus2 > 2)
                        {
                            <li><a>...</a></li>
                        }
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activminus2</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activminus1</a></li>
                        <li class="active"><a>@activ</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activplus1</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activplus2</a></li>
                        <li><a> ...</a></li>
                        <li><a>@total</a></li>
                        <li><a>»</a></li>
                    </ul>
                }
                else if ((total - activ > 3) && !(activ > 3))
                {
                    <ul class="pagination">
                        @for (int i = 1; i < activ; i++)
                        {
                            <li style="cursor:pointer" class="pagingnumberforall"><a>@i</a></li>
                        }
                        <li class="active"><a>@activ </a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activplus1</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activplus2</a></li>
                        <li><a href="#">...</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@total</a></li>
                        <li><a href="#">»</a></li>
                    </ul>

                }
                else if (!(total - activ > 3) && activ > 3)
                {
                    <ul class="pagination">
                        <li><a>«</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>1</a></li>
                        <li><a>...</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activminus2</a></li>
                        <li style="cursor:pointer" class="pagingnumberforall"><a>@activminus1</a></li>
                        <li style="cursor:pointer" class="active"><a>@activ </a></li>
                        @for (int i = activ + 1; i <= total; i++)
                        {
                            <li style="cursor:pointer" class="pagingnumberforall"><a>@i</a></li>
                        }
                        <li><a>»</a></li>
                    </ul>

                }
                else if (total > 1 && !((total - activ) > 3) && !(activ > 3))
                {

                    <ul class="pagination">
                        @for (int i = 1; i < activ; i++)
                        {
                            <li style="cursor:pointer" class="pagingnumberforall"><a>@i</a></li>
                        }
                        <li class="active"><a href="#">@activ</a></li>
                        @for (int i = activ + 1; i <= total; i++)
                        {
                            <li style="cursor:pointer" class="pagingnumberforall"><a>@i</a></li>
                        }
                    </ul>

                }

            }
            <script>
                $(".pagingnumberforall").click(function () {
                   
                    var num = this.textContent;
                  
                    var cat = $("#selectedCat").val();
                    var filter = $("#selectedFilter").val();
                    var brand = $("#selectedBrand").val();
                    var title = $("#SearchQuery").val();
                    var code = $("#codeQuery").val();
                    var address = $("#addressQuery").val();
                    $.ajax({
                        url: '/Core/changeGV',
                        data: {
                            cat: cat,
                            query: title,
                            pcode: code,
                            paddress: address,
                            filter: filter,
                            brand: brand,
                            page: num,
                        },
                        dataType: 'html',
                        success: function (data) {

                            $('#listholder').html(data);
                            $('#listholder').css("display", "block");
                        },
                        error: function () {
                            alert("nashod")
                        },
                    });
                })

            </script>
            <script>

                $(".havaleButt").click(function () {
                    var item = $(this).attr('dataToHavale');
                    $.ajax({
                        url: '/Core/getNodeList',
                        dataType: 'html',
                        data: {
                            value: item,

                        },
                        success: function (data) {

                            $("#havaleNodeList").html(data);
                        },
                        error: function () {

                        }
                    });
                    $("#havaleID").val(item);
                    $("#havaleModal").modal('toggle');


                });

                $(".residButt").click(function () {
                    var item = $(this).attr('dataToResid');

                    $("#residID").val(item);
                    $("#residModal").modal('toggle');


                });
                $(".deleteButt").click(function () {
                    var item = $(this).attr('dataToDel');

                    $("#modalValue").text(item);
                    $("#myModal").modal('toggle');


                });
                $(".editItem").click(function () {
                    var id = $(this).attr('dataToEdit');
                    $.post(
                        "/Core/editMainProduct",
                        { id: id },
                        function (data) {
                            $("#editModal").modal('toggle');
                            $("#editHolder").html(data);
                        });

                });
                $(".quickEdit").click(function () {

                    $(".quickEdit").toggle();
                    $(".quickEditInput").toggle();
                })

                $(".quickVerify").click(function () {


                    var discount = $(this).parent().parent().find(".quickDiscount");
                    var price = $(this).parent().parent().find(".quickPrice");
                    var count = $(this).parent().parent().find(".quickCount");
                    var finalprice = $(this).parent().parent().find(".quickFinalPrice");



                    var ID = $(this).parent().parent().attr('id')
                    $.ajax({
                        url: '/Admin/ChangeProductPrice',
                        dataType: 'html',
                        data: {
                            ID: ID,
                            count: count.val(),
                            price: price.val(),
                            discount: discount.val()
                        },
                        success: function (data) {

                            finalprice.text(data);
                            price.siblings().text(price.val())
                            discount.siblings().text(discount.val())
                            if (count.val() == "-1") {
                                count.siblings().text("موجود")
                                count.siblings().css("color", "red")
                            }
                            else if (count.val() == "0") {
                                count.siblings().text("ناموجود")
                                count.siblings().css("color", "red")
                            }
                            else {
                                count.siblings().text(count.val());
                                count.siblings().css("color", "black")
                            }
                        },
                        error: function () {

                        }
                    });
                })
            </script>

        </div>

        @*@Html.PagedListPager(Model, page => Url.Action("product", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "listholder" }))*@


    }
}


@using BotDetect.Web.Mvc;
@using banimo.Classes;

@model banimo.ViewModePost.getMaindataViewModel

@{
    /**/


    ViewBag.Title = @System.Configuration.ConfigurationManager.AppSettings["siteName2"];
    Layout = "~/Views/Shared/_Layout2.cshtml";

}

@section scripts{


    <script>
        class Carousel {
            constructor(el, options = {}) {
                const DEFAULTS = {
                    infinite: true,
                    slideSelector: ".C-slide",
                    initialSlideIndex: 0,
                    vertical: false
                };
                this.carousel = el;
                this.settings = {
                    ...DEFAULTS,
                    ...options
                };

                this.slides = document.querySelectorAll(this.settings.slideSelector);

                this.state = {
                    currentSlide: this.settings.initialSlideIndex
                };

                this.track = null;
                this.navigation = null;
                this.navigationButtons = [];

                // Init
                this.init();
            }

            setState(newState, callback = () => undefined) {
                this.state = {
                    ...this.state,
                    ...newState
                };
                this.updateCarousel();
                return callback();
            }

            getSettings = () => {
                return this.settings;
            };

            reInitWithOptions = (options = {}) => {
                this.carousel.classList.remove("initialized");
                this.track.classList.add("C-track--reinit");
                this.settings = {
                    ...this.getSettings(),
                    ...options
                };

                this.init();
                this.onResizeActions();
                this.track.classList.remove("C-track--reinit");
            };

            init() {
                const { carousel, slides } = this;

                const { vertical } = this.settings;

                carousel.classList.remove("C-carousel--vertical");
                carousel.classList.remove("C-carousel--horizontal");
                if (vertical) {
                    carousel.classList.add("C-carousel--vertical");
                } else {
                    carousel.classList.add("C-carousel--horizontal");
                    slides.forEach((slide) => {
                        slide.style.float = "left";
                    });
                }

                this.onInitActions();

                window.addEventListener("resize", () => {
                    setTimeout(() => {
                        this.onResizeActions();
                    }, 100);
                });
            }

            onInitActions() {
                this.createSlideTrack();
                this.createNavigation();
                this.createNavigationButtons();
                this.updateCarousel();
                this.carousel.classList.add("initialized");
            }

            onResizeActions() {
                this.setSlideTrackDimensions();
            }

            createSlideTrack() {
                const { slides, carousel, track } = this;

                // Do not re-create track if it exists
                if (!track) {
                    const track = document.createElement("div");
                    track.classList.add("C-track");
                    slides.forEach((slide) => {
                        track.appendChild(slide);
                    });

                    carousel.appendChild(track);
                    this.track = track;
                }
                this.setSlideTrackDimensions();
            }

            setSlideTrackDimensions() {
                const { track, slides } = this;
                slides.forEach((slide) => {
                    slide.style.transition = "none";
                });
                const numberOfSlides = slides.length;

                if (!track) {
                    return;
                }

                const { vertical } = this.settings;

                const height = [...slides].reduce(
                    (acc, slide) => acc + slide.offsetHeight,
                    0
                );
                const width = [...slides].reduce(
                    (acc, slide) => acc + slide.offsetWidth,
                    0
                );

                track.style.transition = "none";

                if (!!vertical) {
                    track.style.width = width / numberOfSlides + "px";
                    track.style.height = height + "px";
                } else {
                    track.style.width = width + "px";
                    track.style.height = height / numberOfSlides + "px";
                }

                track.style.transition = "";
                slides.forEach((slide) => {
                    slide.style.transition = "";
                });
            }

            updateTrackPosition() {
                const { slides, track } = this;

                const numberOfSlides = slides.length;
                const basePercentage = 100 / numberOfSlides;

                const { vertical } = this.settings;

                const { currentSlide } = this.state;

                const translateValue = !!vertical
                    ? `translateY(-${basePercentage * currentSlide}%)`
                    : `translateX(-${basePercentage * currentSlide}%)`;

                track.style.transform = translateValue;
            }

            createNavigation() {
                const { slides, carousel, navigation } = this;

                if (!navigation) {
                    const navigationContainer = document.createElement("div");
                    navigationContainer.classList.add("C-navigation");
                    [...slides].forEach((slide, index) => {
                        navigationContainer.appendChild(this.createNavigationDot(index));
                    });
                    carousel.appendChild(navigationContainer);
                    this.navigation = navigationContainer;
                }
            }

            createNavigationDot(index) {
                const { currentSlide } = this.state;
                const navigationDot = document.createElement("div");
                navigationDot.classList.add("C-navigation__dot");
                navigationDot.setAttribute("data-slideIndex", index);
                navigationDot.addEventListener("click", () => {
                    this.goTo(index);
                });

                return navigationDot;
            }

            createNavigationButtons() {
                const createNavigationButton = (buttonType) => {
                    const { carousel } = this;
                    const navigationButton = document.createElement("button");
                    navigationButton.setAttribute("type", "button");
                    navigationButton.classList.add("C-carousel-navigation-button");
                    navigationButton.classList.add(
                        `C-carousel-navigation-button--${buttonType}`
                    );

                    navigationButton.addEventListener("click", () => {
                        const { slides } = this;
                        const { currentSlide } = this.state;
                        const numberOfSLides = slides.length;
                        const lastSlideIndex = numberOfSLides - 1;

                        if (buttonType === "next") {
                            const slideToGo = currentSlide + 1;
                            if (slideToGo > lastSlideIndex) {
                                if (!!this.settings.infinite) {
                                    return this.goTo(0);
                                }
                                return;
                            } else {
                                this.goTo(slideToGo);
                            }
                        } else {
                            const slideToGo = currentSlide - 1;
                            if (slideToGo < 0) {
                                if (!!this.settings.infinite) {
                                    return this.goTo(lastSlideIndex);
                                }
                                return;
                            } else {
                                this.goTo(slideToGo);
                            }
                        }
                    });

                    navigationButton.textContent = buttonType;
                    carousel.appendChild(navigationButton);
                    this.navigationButtons.push(navigationButton);
                };

                if (this.navigationButtons.length <= 0) {
                    createNavigationButton("next");
                    createNavigationButton("prev");
                }
            }



            updateNavigation() {
                const { navigation } = this;

                const { currentSlide } = this.state;

                const navigationDots = navigation.querySelectorAll(".C-navigation__dot");
                navigationDots.forEach((dot) => {
                    const dotIndex = parseInt(dot.getAttribute("data-slideIndex"), 10);
                    if (dotIndex === currentSlide) {
                        dot.classList.add("active");
                    } else {
                        dot.classList.remove("active");
                    }
                });
            }

            updateSlides() {
                const { slides } = this;

                const { currentSlide } = this.state;

                slides.forEach((slide, index) => {
                    if (index === currentSlide) {
                        slide.classList.add("active");
                    } else {
                        slide.classList.remove("active");
                    }
                });
            }

            goTo = (index) => {
                this.setState(
                    {
                        currentSlide: index
                    },
                    () => {
                        //console.log('Current slide is now: ', this.state.currentSlide);
                    }
                );
            };

            updateCarousel() {
                this.updateTrackPosition();
                this.updateNavigation();
                this.updateSlides();
            }
        }

        const registeredCarousels = [];
        const carousels = document.querySelectorAll(".C-carousel");
        carousels.forEach((carousel, index) => {
            registeredCarousels.push({
                id: `C-carousel-${index}`,
                carousel: new Carousel(carousel, {
                    vertical: true
                })
            });
        });

        const changeCarouselDirectionButton = document.querySelector(
            ".js-change-carousel-direction"
        );
        //changeCarouselDirectionButton.addEventListener("click", function (event) {
        //    const carouselId = this.getAttribute("data-carousel-id");
        //    const carouselToChange = registeredCarousels.find(
        //        (carousel) => carousel.id === carouselId
        //    );
        //    const settings = carouselToChange.carousel.getSettings();
        //    const { vertical } = settings;
        //    carouselToChange.carousel.reInitWithOptions({
        //        vertical: !vertical
        //    });
        //});
        $(document).ready(function () {
            $(".C-carousel-navigation-button--prev").hide();
            $(".C-carousel-navigation-button--next").hide();
            $('.main').bind('mousewheel', function (e) {
                if (e.originalEvent.wheelDelta / 120 > 0) {
                    $(".C-carousel-navigation-button--prev").click();
                    var btn = $(".C-carousel-navigation-button--prev");
                    btn.prop('disabled', true);
                    setTimeout(function () {
                        btn.prop('disabled', false);
                    }, 1500);
                }
                else {
                    $(".C-carousel-navigation-button--next").click();
                    var btn = $(".C-carousel-navigation-button--next");
                    btn.prop('disabled', true);
                    setTimeout(function () {
                        btn.prop('disabled', false);
                    }, 1500);
                }
            });
        })
    </script>
    <script>
        $(".arrowLeft").click(function () {
            var id = $(this).attr('nametype2');
            var nameType = $(this).attr('nametype');
            $("." + nameType).hide();
            $("." + id).fadeIn();

        })
        $(".arrowRight").click(function () {
            var id = $(this).attr('nametype2');
            var nameType = $(this).attr('nametype');
            $("." + nameType).hide();
            $("." + id).fadeIn();

        })
    </script>

}


<style>
    * {
        box-sizing: border-box;
    }

    html,
    body {
        margin: 0;
        padding: 0;
    }

    .C-carousel {
        background-color: white;
        height: 100vh;
        width: 100vw;
        overflow: hidden;
        position: relative;
    }

    .C-track {
        opacity: 1;
        transition: all 400ms ease;
    }

    .C-track--reinit {
        opacity: 0;
        transition: all 0ms linear;
    }

    .C-slide {
        height: 100vh;
        width: 100vw;
        display: flex;
        flex: 1 1 auto;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: #fff;
        /*background: blueviolet no-repeat center/cover;*/
        background-blend-mode: overlay;
      
        font-weight: bold;
        font-size: 22px;
        /*letter-spacing: 2px;
        text-transform: uppercase;*/
        text-align:right !important;
    }

    .C-carousel.initialized .C-slide {
        border-radius: 100vw;
        transform: scale(0.5) skew(-5deg) rotate(0);
        transition: all 300ms;
    }

        .C-carousel.initialized .C-slide.active {
            transform: scale(1) skew(0) rotate(0);
            border-radius: 0;
        }

    /*.C-slide:nth-child(1) {
            background-image: url(https://picsum.photos/1480/800?image=11);
        }

        .C-slide:nth-child(2) {
            background-image: url(https://picsum.photos/1480/800?image=22);
        }

        .C-slide:nth-child(3) {
            background-image: url(https://picsum.photos/1480/800?image=33);
        }

        .C-slide:nth-child(4) {
            background-image: url(https://picsum.photos/1480/800?image=44);
        }

        .C-slide:nth-child(5) {
            background-image: url(https://picsum.photos/1480/800?image=55);
        }*/

    .C-navigation {
        position: absolute;
        bottom: 5px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 2;
    }

    .C-carousel--vertical .C-navigation {
        bottom: auto;
        left: auto;
        right: 20px;
        bottom: 0%;
        transform: translateY(-50%);
        width: 20px;
    }

    @@media (max-width: 480px) {
        .C-carousel--horizontal .C-navigation {
            bottom: 50px;
        }
    }

    .C-navigation__dot {
        width: 5px;
        height: 5px;
        background: #fff;
        display: inline-block;
        margin: 4px;
        cursor: pointer;
        border-radius: 50%;
    }

        .C-navigation__dot.active {
            background: #00a002;
            transform: scale(1.3);
        }

    .C-carousel-navigation-button {
        position: absolute;
        top: 50%;
        left: 10px;
        z-index: 2;
        border: 2px solid #fff;
        box-shadow: none;
        border-radius: 5px;
        font-weight: bold;
        color: #fff;
        padding: 10px;
        background: transparent;
        cursor: pointer;
        transform: translateY(-50%);
        transition: all 300mes ease;
        text-transform: capitalize;
    }

        .C-carousel-navigation-button:hover {
            background: #eee;
            color: blueviolet;
        }

        .C-carousel-navigation-button:active {
            background: #fff;
        }

    .C-carousel-navigation-button--next {
        left: auto;
        right: 10px;
    }

    .C-carousel--vertical .C-carousel-navigation-button {
        bottom: 10px;
        top: auto;
        left: auto;
        right: 25px;
        transform: translateY(0);
    }

    .C-carousel--vertical .C-carousel-navigation-button--next {
        right: 20px;
    }

    .C-carousel--vertical .C-carousel-navigation-button--prev {
        transform: translatex(calc(-100% - 5px));
    }

    .C-slide-title {
        padding: 1rem 2rem;
        font-size: 1.5rem;
        position: relative;
        transform: translateY(100%);
        opacity: 0;
        transition: all 300ms ease;
        transition-delay: 500ms;
    }

    @@media (min-width: 480px) {
        .C-slide-title {
            font-size: 2rem;
        }
    }

    @@media (min-width: 768px) {
        .C-slide-title {
            font-size: 42px;
        }
    }

    .active .C-slide-title {
        transform: translateY(0) translateX(0);
        opacity: 1;
    }

    /* Pen controls */
    .pen-controls {
        position: fixed;
        bottom: 10px;
        left: 10px;
    }

        .pen-controls button {
            border: 2px solid blueviolet;
            box-shadow: none;
            border-radius: 0;
            font-weight: bold;
            color: blueviolet;
            padding: 10px;
            background: #fff;
            cursor: pointer;
        }

    .bannerHoder {
        display: flex;
        justify-content: space-around;
        padding: 70px;
       
        width: 100%
    }
</style>
<style>
    .arrowLeft {
        min-width: 75px;
        left: 50px;
        top: 50%;
        font-size: 25px;
        text-align: center;
        color: black;
        display: flex;
        align-items: center;
        justify-content: center;
        position: absolute;
        font-size: 14px;
        background-color: transparent;
        border-radius: 5px;
        padding: 3px 10px;
    }

    .arrowRight {
        justify-content: center;
        min-width: 75px;
        right: 50px;
        top: 50%;
        font-size: 25px;
        text-align: center;
        color: black;
        display: flex;
        align-items: center;
        position: absolute;
        font-size: 14px;
        background-color: transparent;
        border-radius: 5px;
        padding: 3px 10px;
       
    }


        .arrowRight p {
            margin-right: 10px;
            padding-bottom: 5px;
        }

    .arrowLeft p {
        margin-left: 10px;
        padding-bottom: 5px;
    }
    .arrowLeft i {
        font-size: 40px;
        color: black
    }
    .arrowRight i{
        font-size:40px;
        color:black
    }
</style>


<div>
    <div class="C-carousel">
        <div class="C-slide">

            <video class="a1" style="width:100%;" playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop">
                <source src="~/video/menVideo.mp4" type="video/mp4">
            </video>
            <video class="a2" style="display:none; width:100%;" playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop">
                <source src="~/video/clip.mp4" type="video/mp4">
            </video>
            <video class="a3" style="display:none; width:100%;" playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop">
                <source src="~/video/k1-video.mp4" type="video/mp4">
            </video>
        </div>
        <div class="C-slide">
            <div class="a1 bannerHoder">
                <img src="~/images/m1-min.jpg" />
            </div>
            <div style="display:none;" class="a2 bannerHoder">
                <img src="~/images/w1-min.jpg" />
            </div>
            <div style="display:none;" class="a3 bannerHoder">
                <img src="~/images/k1-min.jpg" />

            </div>
        </div>
        <div class="C-slide">

            <video class="a1" style="" playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop">
                <source src="~/video/m2-video.mp4" type="video/mp4">
            </video>
            <video class="a2" style="display:none; " playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop">
                <source src="~/video/w2-vieo.mp4" type="video/mp4">
            </video>
            <video class="a3" style="display:none;" playsinline="playsinline" autoplay="autoplay" muted="muted" loop="loop">
                <source src="~/video/k2-video.mp4" type="video/mp4">
            </video>
        </div>

        <div class="C-slide">
            <div class="a1 bannerHoder">
                <img src="~/images/m2-min.jpg" />

            </div>
            <div style="display:none;" class="a2 bannerHoder">
                <img src="~/images/w2-min.jpg" />
            </div>
            <div style="display:none;" class="a3 bannerHoder">
                <img src="~/images/k2-min.jpg" />

            </div>
        </div>
        <div class="C-slide">
            <div class="a1 bannerHoder">
                <img src="~/images/m3-min.jpg" />

            </div>
            <div style="display:none;" class="a2 bannerHoder">
                <img src="~/images/w3-min.jpg" />
            </div>
            <div style="display:none;" class="a3 bannerHoder">
                <img src="~/images/k3-min.jpg" />

            </div>
        </div>
       
        <div class="C-slide">
            @{Html.RenderAction("contactSection", "Home");}
        </div>

    </div>
    <div class="a1 arrowLeft" nametype="a1" nametype2="a2" style=" "><i class="  fal fa-chevron-left"> </i><p>زنانه</p> </div>
    <div class="a2 arrowLeft" nametype="a2" nametype2="a3" style="display:none;"><i class=" fal fa-chevron-left"> </i> <p>بچه گانه</p></div>
    <div class="a3 arrowLeft" nametype="a3" nametype2="a1" style="display:none;"><i class=" fal fa-chevron-left"> </i> <p>مردانه</p> </div>


    <div class="a1 arrowRight" nametype="a1" nametype2="a3" style=" "><p> بچه گانه</p><i class="  fal fa-chevron-right"> </i></div>
    <div class="a3 arrowRight" nametype="a3" nametype2="a2" style="display:none;"><p>زنانه</p><i class=" fal fa-chevron-right"> </i></div>
    <div class="a2 arrowRight" nametype="a2" nametype2="a1" style="display:none;"><p>مردانه</p><i class=" fal fa-chevron-right"> </i></div>

</div>






@*<div class="pen-controls">
        <button class="js-change-carousel-direction" data-carousel-id="C-carousel-0">Change slider direction</button>
    </div>*@



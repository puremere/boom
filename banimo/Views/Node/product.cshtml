@using System.Web
@model  banimo.AdminPanel.ViewModel.AdminProductVM
@{
    Layout = "~/Views/Shared/_NodeLayout.cshtml";
    ViewBag.Title = "مدیریت مطالب";

}



@section scripts{
    <link href="~/Content/croppie.css" rel="stylesheet" />
    <script src="~/Scripts/croppie.js">
    </script>
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea',
            height: 500,
            menubar: false,
            plugins: [
                'advlist autolink lists link image charmap print preview anchor',
                'searchreplace visualblocks code fullscreen',
                'insertdatetime media table paste code help wordcount'
            ],

            toolbar: 'undo redo | formatselect | ' +
                ' bold italic backcolor | alignleft aligncenter ' +
                ' alignright alignjustify | bullist numlist outdent indent |' +
                ' removeformat | help',
            content_css: [
                '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
                '//www.tiny.cloud/css/codepen.min.css'
            ]
        });
        //tinymce.activeEditor.execCommand('mceDirectionRTL');
    </script>

    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin="">
    </script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
          integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI="
          crossorigin="" />
    <script src="~/Scripts/createItemNode.js"></script>
    <script>
        if ('@Session["lang"]' == 'fa') {
            $("body").get(0).style.setProperty("--align", "right");
            $("body").get(0).style.setProperty("--direction", "rtl");
        }
        else {
            $("body").get(0).style.setProperty("--align", "left");
            $("body").get(0).style.setProperty("--direction", "ltr");
        }
        $(".creatButt").click(function () {
            $(".imageDefault").css("border", "none");
            var value = 0;

            if ($(".imageItemParent").height() > 20) {

            }
            else {
                alert($(".imageItemParent").height())
                $(".imageDefault").css("border", "1px solid red");
                value = 1;
            }
            $(".inputform").each(function () {

                $(this).css("border", "none");
                if ($(this).val() == "") {
                    $(this).css("border", "1px solid red");
                    value = 1;
                }
            })
            if (value == 0) {
                $("#createForm").submit();
            }
            else {
                alert("Fill All Fields")
            }

        });
        var getSubcatTree = function (val, type) {
            if (val != "") {
                var id = val;

                $.ajax({
                    url: "/Home/getSubcatJson",
                    dataType: "html",
                    data: {
                        result: id,
                        level: type
                    },
                    success: function (data) {

                        if (type == "1") {

                            $("#subcatHolder").html(data);
                        }
                        else {
                            $("#subcatHolder2").html(data);

                        }

                    }
                })
            }
        }
        $("#cat").change(function () {
            getSubcatTree($(this).val(),"1")
        })

        $("#country").change(function () {
            var val = $(this).val();
            $.ajax({
                url: "/Home/getcityPartial",
                dataType: "html",
                data: {
                    result: val
                },
                success: function (data) {
                    //alert(data);
                    $("#cityHolder").html(data);

                }
            })
        })

    </script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyDnIMRNDW6W-9c74yyiO_Sp3oeya0hoLwQ"></script>
    <script type="text/javascript">
        var mymap;
        var theMarker = {};
        getLocation();

        function showLocation(position) {
            var lat = position.coords.latitude;
            var lon = position.coords.longitude;
            mymap = L.map('mapid', { attributionControl: false }).setView([51.505, -0.09], 13);
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: 'pk.eyJ1IjoibWVyaW9saSIsImEiOiJja2p6dXhmdngwYmVvMnZwY2lyc2htNGxhIn0.Y9t__Bll6Fw9b9amb_rcHg',

            }).addTo(mymap);
            mymap.panTo(new L.LatLng(lat, lon));
            theMarker = L.marker([lat, lon]).addTo(mymap);


            mymap.on('click', function (e) {

                lat = e.latlng.lat;
                lon = e.latlng.lng;

                console.log("You clicked the map at LAT: " + lat + " and LONG: " + lon);
                //Clear existing marker,

                if (theMarker != undefined) {
                    mymap.removeLayer(theMarker);
                };

                //Add a marker to show where you clicked.
                theMarker = L.marker([lat, lon]).addTo(mymap);
                $("#lat").val(lat);
                $("#lon").val(lon);
            });
        }
        function errorHandler(err) {

            mymap = L.map('mapid', { attributionControl: false }).setView([51.505, -0.09], 13);
            L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                maxZoom: 18,
                id: 'mapbox/streets-v11',
                tileSize: 512,
                zoomOffset: -1,
                accessToken: 'pk.eyJ1IjoibWVyaW9saSIsImEiOiJja2p6dXhmdngwYmVvMnZwY2lyc2htNGxhIn0.Y9t__Bll6Fw9b9amb_rcHg',

            }).addTo(mymap);
            var lat = '35.7442005749';
            var lon = '51.473131743990';
            mymap.panTo(new L.LatLng(lat,lon ));
            theMarker = L.marker([lat, lon]).addTo(mymap);

            mymap.on('click', function (e) {

                lat = e.latlng.lat;
                lon = e.latlng.lng;

                console.log("You clicked the map at LAT: " + lat + " and LONG: " + lon);
                //Clear existing marker,

                if (theMarker != undefined) {
                    mymap.removeLayer(theMarker);
                };

                //Add a marker to show where you clicked.
                theMarker = L.marker([lat, lon]).addTo(mymap);
                $("#lat").val(lat);
                $("#lng").val(lon);
            });
            $("#lat").val(lat);
            $("#lng").val(lon);



            if (err.code == 1) {
                //alert("Error: Access is denied!");
            } else if (err.code == 2) {
                //alert("Error: Position is unavailable!");
            }





        }
        function getLocation() {
            if (navigator.geolocation) {
                // timeout at 60000 milliseconds (60 seconds)
                var options = { timeout: 3000 };
                navigator.geolocation.getCurrentPosition
                    (showLocation, errorHandler, options);


            } else {
                alert("Sorry, browser does not support geolocation!");
            }
        }
        $("#mapid").height("250px");

        //google.maps.event.addDomListener(window, 'load', function () {
        //    var places = new google.maps.places.Autocomplete(document.getElementById('address'));
        //    google.maps.event.addListener(places, 'place_changed', function () {
        //        var place = places.getPlace();


        //        if (theMarker != undefined) {
        //            mymap.removeLayer(theMarker);
        //        };
        //        mymap.panTo(new L.LatLng(place.geometry.location.lat(), place.geometry.location.lng()));
        //        theMarker = L.marker([place.geometry.location.lat(), place.geometry.location.lng()]).addTo(mymap);
        //        $("#lat").val(place.geometry.location.lat());
        //        $("#lng").val(place.geometry.location.lng());
        //    });
        //});
    </script>
}


@{
    if (@ViewBag.msg == 1)
    {
        <script>
            toastr.options = {
                "debug": false,
                "positionClass": "toast-top-center",
                "onclick": null,
                "fadeIn": 300,
                "fadeOut": 1000,
                "timeOut": 5000,
                "extendedTimeOut": 1000
            }
            toastr.success('محصول مورد نظر با موفقیت اضافه شد')
                     @ViewBag.msg == 4
        </script>
    }
    if (@ViewBag.msg == 2)
    {
        <script>
            toastr.options = {
                "debug": false,
                "positionClass": "toast-top-center",
                "onclick": null,
                "fadeIn": 300,
                "fadeOut": 1000,
                "timeOut": 5000,
                "extendedTimeOut": 1000
            }
            toastr.error('خطا لطفاً مجدداً تلاش کنید')
                     @ViewBag.msg == 4
        </script>
    }
    if (@ViewBag.msg == 3)
    {
        <script>
            toastr.options = {
                "debug": false,
                "positionClass": "toast-top-center",
                "onclick": null,
                "fadeIn": 300,
                "fadeOut": 1000,
                "timeOut": 5000,
                "extendedTimeOut": 1000
            }
            toastr.error('محصول با همین مشخصات وجود دارد')
                     @ViewBag.msg == 4
        </script>
    }

    if (ViewBag.message == "1")
    {
        <script>
            toastr.options = {
                "debug": false,
                "positionClass": "toast-top-full-width",
                "onclick": null,
                "fadeIn": 300,
                "fadeOut": 1000,
                "timeOut": 150000,
                "extendedTimeOut": 10000,



            }
            toastr.success('Item Is Added Successfully');
        </script>
    }



}


<style>
    .nav-tabs {
        padding-right: 0px;
    }

        .nav-tabs li {
            float: right !important;
        }

    .fieldholder {
        /*width: 30%;
            display: inline-block;*/
        padding: 15px;
    }
</style>
<div class="row" style=" padding:10px; margin:0px; ">

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <button class="nav-link " id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">@Resources.res.VendorReport </button>
            <button class="nav-link active" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">@Resources.res.newVendor </button>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade " id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <div class="row">
                <div class="col-sm-12">
                    <!-- Details Start -->
                    <div class="card">
                        <div class="card-body">

                            <div class="title-header option-title">
                                <h5>@Resources.res.searchPanel</h5>
                            </div>

                            <div class="row">
                                <div class="form-group " style="display:flex; align-items:center">


                                    @{
                                        List<SelectListItem> listItems = new List<SelectListItem>();
                                        if (Model.log.filtersModel != null)
                                        {
                                            foreach (var item in Model.log.filtersModel)
                                            {
                                                listItems.Add(new SelectListItem
                                                {
                                                    Text = item.title,
                                                    Value = "1" + item.ID
                                                });
                                                if (item.filtersubcat != null)
                                                {
                                                    foreach (var subcat in item.filtersubcat)
                                                    {
                                                        listItems.Add(new SelectListItem
                                                        {
                                                            Text = "---" + subcat.title,
                                                            Value = "2" + subcat.ID
                                                        });
                                                        if (subcat.filtersubcat2 != null)
                                                        {
                                                            foreach (var subcat2 in subcat.filtersubcat2)
                                                            {
                                                                listItems.Add(new SelectListItem
                                                                {
                                                                    Text = "------" + subcat2.title,
                                                                    Value = "3" + subcat2.ID
                                                                });
                                                            }
                                                        }

                                                    }
                                                }

                                            }
                                        }
                                        List<SelectListItem> listItems2 = new List<SelectListItem>();
                                        if (Model.log.locationAll != null)
                                        {
                                            foreach (var item in Model.log.locationAll)
                                            {
                                                listItems2.Add(new SelectListItem
                                                {
                                                    Text = item.title,
                                                    Value = "1" + item.ID
                                                });
                                                if (item.cityList != null)
                                                {
                                                    foreach (var subcat in item.cityList)
                                                    {
                                                        listItems2.Add(new SelectListItem
                                                        {
                                                            Text = "---" + subcat.title,
                                                            Value = "2" + subcat.ID
                                                        });


                                                    }
                                                }

                                            }
                                        }

                                    }

                                    <form method="post" action="ExportToExcel" style="display:inline-block; width:100%">


                                        <div class="autocomplete col-md-5 col-sm-3 col-xs-12" style="margin:20px;display:inline-block">
                                            <label> @Resources.res.category </label>
                                            <div style="width:100%">
                                                @Html.DropDownListFor(m => m.SelectedlistProduct, listItems, @Resources.res.category , new { id = "listofproductfirst", @class = "form-control" })

                                            </div>
                                        </div>
                                        @*<div class="autocomplete col-md-3 col-sm-3 col-xs-12" style="min-width:250px">
                                                <label> Location </label>
                                                <div style="width:100%">
                                                    @Html.DropDownList("Countryname2", listItems2, "select item", new { id = "listofLocation2", @class = "form-control" })
                                                </div>
                                            </div>*@
                                        <div class="autocomplete col-md-5 col-sm-3 col-xs-12" style="margin:20px ;display:inline-block">
                                            <label> @Resources.res.search </label>
                                            <div style="width:100%">
                                                <input id="SearchQuery" name="SearchQuery" type="text" placeholder=" @Resources.res.search" class="form-control" style="padding:8px" />

                                            </div>
                                        </div>
                                        <div style="display:flex; margin-top:25px;margin-left:15px; min-width:250px">
                                            <div style="padding:7px 40px" id="Verify" class="btn btn-primary lgnsubmitt"> @Resources.res.OK</div>

                                        </div>

                                        <script>


                                            var getlist = function () {

                                                var query = $("#SearchQuery").val();
                                                var value = $("#listofproductfirst").val();
                                                var partner = $("#partnerList").val();
                                                var Countryname = $("#listofLocation2").val()
                                                $.ajax({
                                                    url: '/Node/GetTheListOfItems',
                                                    data:
                                                    {
                                                        value: value,
                                                        query: query,
                                                        partner: partner,
                                                        Countryname: Countryname
                                                    },
                                                    dataType: 'html',
                                                    success: function (data) {

                                                        $('#listholder').html(data);
                                                        $('#listholder').css("display", "block");
                                                    },
                                                    error: function () {
                                                        alert("nashod")
                                                    }
                                                });
                                            };

                                            $("#Verify").click(function () {


                                                $.ajax({
                                                    url: '/Node/resetAdminProductPage',
                                                    dataType: 'html',
                                                    success: function (data) {
                                                        getlist();
                                                    },
                                                    error: function () {
                                                        alert("nashod")
                                                    }
                                                });


                                            })






                                        </script>
                                    </form>












                                </div>
                            </div>


                            <div class="form-group ">

                            </div>


                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-12">
                    <!-- Details Start -->
                    <div class="card">
                        <div class="card-body">
                            <div class="title-header option-title">
                                <h5>@Resources.res.VendorList</h5>
                            </div>
                            <div class="row">
                                <div class="form-group rowholder" id="listholder" style="display:none">
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>



        </div>
        <div class="tab-pane fade show active" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
            <div class="row">
                <div class="col-sm-12">
                    <!-- Details Start -->
                    <div class="card">
                        <div class="card-body">
                            <div class="title-header option-title">
                                <h5>@Resources.res.setNewVendor </h5>
                            </div>
                            <style>
                                .itemRow {
                                    margin: 10px 0;
                                }

                                .imageCover {
                                    position: relative;
                                }

                                    .imageCover img {
                                        max-width: 150px
                                    }
                                .formlable{
                                    margin-bottom:5px;
                                    font-size:14px;
                                    font-weight:600;
                                    margin-top:20px
                                }
                            </style>
                            <main id="loginMain" style="padding: 50px 150px">
                                <div class="row  parent">
                                    <div class="ItemsHome">
                                        <div class="itemRow">
                                            <div class="default " style="cursor:pointer;margin-bottom:15px; text-align:center;border:1px dotted #4d4d4d; padding:5px 10px ;border-radius:5px;"> @Resources.res.image <img class="imageDefault" style="width:30px; margin : 0 20px" src="~/images/addPic.png" /></div>
                                            <div id="imageHolder" style="display:flex">

                                                <input multiple type="file" id="imageFileHolder" name="image" required="required" class="form-control  imageinput" style="display:none">

                                                <div class="imageItemParent">

                                                    @{
                                                        if (@ViewBag.images != null)
                                                        {
                                                            string[] lst = (ViewBag.images).Split(',');


                                                            foreach (var item in lst)

                                                            {

                                                                <div class="imageCover">
                                                                    <img src="/images/@item" />
                                                                    <img id="@item" class="removeImage" src="/images/trash.png" style="position:absolute; bottom:0;top:0;left:0;right:0;margin:auto" /> <i class="fa fa-remove" style="font-size: 12px;position: absolute;bottom: 5px;left: 0px;color: white;"></i>
                                                                </div>

                                                            }
                                                        }
                                                    }
                                                </div>

                                            </div>


                                        </div>
                                        <form id="createForm" action="addItem" method="post">
                                            @*<div class="itemRow">


            <input placeholder="@Resources.res.link" value="@Model.link" id="link" name="link" class="form-control " />
        </div>*@
                                            <div class="itemRow">
                                                <p class="formlable">@Resources.res.title :</p>
                                                <input placeholder="@Resources.res.title " id="title" name="title" class="form-control inputform" />
                                            </div>
                                            <div class="itemRow">
                                                <p class="formlable">@Resources.res.password :</p>
                                                <input placeholder="@Resources.res.password" id="password" name="password" class="form-control inputform" />
                                            </div>
                                            <div class="itemRow">
                                                <p class="formlable">@Resources.res.VendorPercent :</p>
                                                <input placeholder="@Resources.res.VendorPercent" id="percent" type="number" name="percent" class="form-control inputform" />
                                            </div>
                                            <div class="itemRow">
                                                <p class="formlable">@Resources.res.deliverPrice :</p>
                                                <input placeholder="@Resources.res.deliverPrice" id="deliverPrice" type="number" name="deliverPrice" class="form-control inputform" />
                                            </div>
                                            <div class="itemRow">
                                                <p class="formlable">@Resources.res.deliverType : </p>
                                                @Html.DropDownList("deliverType", new SelectList(Model.log.delivertypeList, "ID", "name"), @Resources.res.deliverType, new { @class = "form-control" })

                                                @*<p>@Resources.res.createTitle </p>*@

                                            </div>

                                            <div class="itemRow">
                                                <p class="formlable">@Resources.res.description : </p>
                                                <input placeholder="@Resources.res.description" style="flex:1; height:100px" id="desc" name="desc" class="form-control " />

                                            </div>
                                            <div class="itemRow">

                                                <p class="formlable">@Resources.res.category : </p>
                                                @Html.DropDownList("catid", listItems, @Resources.res.category , new { id = "listofproduct", @class = "form-control" })
                                                @*  @Html.DropDownList("catid", new SelectList(Model.SelectedlistProduct, "ID", "title"), Resources.res.chooscat, new { @class = "form-control inputform", id = "cat", style = "" })*@

                                            </div>
                                            @*<div class="itemRow">

            <div id="subcatHolder" style="flex:1">
                @Html.DropDownList("subcatid", new SelectList(Model.cat, "ID", "title"), Resources.res.choossubcat, new { @class = "form-control", id = "subcat", @disabled = "disabled" })

            </div>

        </div>*@
                                            @*<div class="itemRow">

            <div id="subcatHolder2" style="flex:1">
                @Html.DropDownList("subcatid2", new SelectList(Model.cat, "ID", "title"), Resources.res.coosesubcattwo, new { @class = "form-control", id = "subcat2", @disabled = "disabled" })

            </div>

        </div>*@

                                        <div class="itemRow">
                                            @*<p>@Resources.res.createPhone </p>*@
                                            <p class="formlable">@Resources.res.phone 1 :</p>
                                            <input placeholder=" @Resources.res.phone 1" id="phone1" name="phone1" class="form-control " />

                                        </div>
                                        <div class="itemRow">
                                           
                                            <p class="formlable">@Resources.res.phone 2 :</p>
                                            <input placeholder=" @Resources.res.phone 2" id="phone2" name="phone2" class="form-control " />

                                        </div>

                                        <div class="itemRow">
                                            <p class="formlable">@Resources.res.fax :</p>
                                            <input placeholder=" @Resources.res.fax" id="fax" name="fax" class="form-control " />
                                        </div>
                                        <div class="itemRow">
                                            <p class="formlable">@Resources.res.mobile 1 :</p>
                                            <input placeholder=" Mobile" id="@Resources.res.mobile 1" name="mobile1" class="form-control " />

                                        </div>
                                        <div class="itemRow">
                                            <p class="formlable">@Resources.res.mobile 2 :</p>
                                            <input placeholder=" @Resources.res.mobile 2" id="mobile2" name="mobile2" class="form-control " />

                                        </div>
                                        <div class="itemRow">
                                            <p class="formlable">@Resources.res.email :</p>
                                            <input placeholder=" @Resources.res.email" id="email" name="email" class="form-control " />
                                        </div>


                                            <div class="itemRow">
                                                <p class="formlable">@Resources.res.website :</p>
                                                <input placeholder=" @Resources.res.website" id="website" name="website" class="form-control " />
                                            </div>
                                            @*
        <div class="itemRow">
            <p>@Resources.res.telegram </p>
            <input placeholder="@Resources.res.telegram" id="telegram" name="telegram" class="form-control" />
        </div>
        <div class="itemRow">
            <p>@Resources.res.whatsapp </p>
            <input placeholder="@Resources.res.whatsapp" id="whatsapp" name="whatsapp" class="form-control" />
        </div>*@

                                            @*<div class="itemRow">

            @Html.DropDownList("country", new SelectList(Model.lands, "ID", "title"), Resources.res.chooseCountry, new { @class = "form-control inputform", id = "country", style = "" })

        </div>*@
                                            @*<div class="itemRow">

            <div id="cityHolder" style="flex:1">
                @Html.DropDownList("city", new SelectList(Model.lands, "ID", "title"), Resources.res.chooseCity, new { @class = "form-control", id = "city", @disabled = "disabled", style = "" })

            </div>

        </div>*@

                                        <div class="itemRow">
                                            <p class="formlable">@Resources.res.state :</p>
                                            @if (Model.log.locations != null)
                                            {
                                                @Html.DropDownList("linkedin", new SelectList(@Model.log.locations.Where(x => x.type == "State"), "Title", "Title"),  @Resources.res.state, new { @class = "form-control" })

                                            }


                                        </div>
                                        <div class="itemRow">
                                            <p class="formlable">@Resources.res.city :</p>

                                            @if (Model.log.locations != null)
                                            {
                                                @Html.DropDownList("instagram", new SelectList(@Model.log.locations.Where(x => x.type == "City"), "Title", "Title"),  @Resources.res.city, new { @class = "form-control" })

                                            }


                                        </div>
                                        <div class="itemRow">
                                            <p class="formlable">@Resources.res.address :</p>
                                            <input placeholder=" @Resources.res.address" style="flex:1; height:100px" id="address" name="address" class="form-control inputform" />
                                        </div>

                                            <input style="display:none" id="lat" name="lat" />
                                            <input style="display:none" id="lng" name="lng" />
                                            <div class="" style="    padding: 10PX;">
                                                <div id="mapid" style=" width:100% ; "></div>
                                            </div>

                                            <div class="itemRow " style="border:none">
                                                <div class="creatButt btn btn-success">@Resources.res.OK</div>
                                            </div>
                                        </form>
                                    </div>
                                    @{
                                        int w = Request.Browser.ScreenPixelsWidth;
                                        int h = Request.Browser.ScreenPixelsHeight;
                                        if (Request.Browser.IsMobileDevice || (w < 720 && h > 720))
                                        {

                                        }
                                        else
                                        {


                                        }
                                    }



                                </div>
                            </main>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>

</div>








@if (ViewBag.page != null)
{
    <script>
    var item = @ViewBag.page

    $.ajax({
    url: '/Admin/GetTheListOfItems',
    dataType: 'html',
    data:
    {
    page: item
    },
    success: function(data) {

    $('#listholder').html(data);
    $('#listholder').css("display", "block");

    },
    error: function() {
    alert("nashod")
    }
    });
    </script>
}




















